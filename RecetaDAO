using RabbitMQ.Client;
using RabbitMQ.Client.Events;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Web;
using Twilio;
using Twilio.Rest.Api.V2010.Account;
using WCFDSDREPORTE.Dominio;

namespace WCFDSDREPORTE.Persistencia
{
    public class RecetaDao
    {
        private string CadenaConexion = @"Data Source=bddsalud.ckpig9bkezfh.us-east-2.rds.amazonaws.com;Initial Catalog=DSD_SALUD;User Id=admin;Password=UPC2019$;";

        public List<Receta> Obtener(string pac_dni)
        {

            Receta RecetaEncontrado = null;
            List<Receta> lsRecetaEncontrada = new List<Receta>();
            // string sentencia = "Select t0.rec_cod,t0.Cit_cod, t0.Rec_fec,t0.pac_cod,"+
            //"t2.pac_dni, (t2.Pac_app + ' ' + t2.Pac_apm + ' , ' + t2.Pac_nom) as pac_nombres,"+
            //"t1.med_cod,t3.Med_Nom,t1.Rec_Dos,t1.Rec_Frec,t1.Rec_FECI,t1.REC_FEFI,t1.REC_DET from[dbo].[Receta_Cab] T0"+
            //"inner join[dbo].[Receta_Detalle] T1 ON T0.Rec_Cod=T1.Rec_Cod" +
            //"inner join[dbo].[Paciente] T2 ON t2.Pac_cod=t0.Pac_Cod" +
            //"inner join[dbo].[Medicamento] t3 on t3.Med_Cod=t1.Med_Cod WHERE t2.pac_dni = @pac_dni";

            using (SqlConnection conexion = new SqlConnection(CadenaConexion))
            {
                conexion.Open();
                using (SqlCommand comando = new SqlCommand("RECETA_DETALLE_PACIENTE", conexion))
                {
                    comando.CommandType = System.Data.CommandType.StoredProcedure;
                    comando.Parameters.Add(new SqlParameter("@pac_dni", pac_dni));
                    using (SqlDataReader resultado = comando.ExecuteReader())
                    {
                        while (resultado.Read())
                        {
                            RecetaEncontrado = new Receta();
                            RecetaEncontrado.rec_cod = resultado.GetInt32(resultado.GetOrdinal("rec_cod"));
                            RecetaEncontrado.Cit_cod = resultado.GetInt32(resultado.GetOrdinal("Cit_cod"));
                            RecetaEncontrado.Rec_fec = resultado.GetString(resultado.GetOrdinal("Rec_fec"));
                            RecetaEncontrado.pac_cod = resultado.GetInt32(resultado.GetOrdinal("pac_cod"));
                            RecetaEncontrado.pac_dni = resultado.GetString(resultado.GetOrdinal("pac_dni"));
                            RecetaEncontrado.pac_nombres = resultado.GetString(resultado.GetOrdinal("pac_nombres"));
                            RecetaEncontrado.med_cod = resultado.GetString(resultado.GetOrdinal("med_cod"));
                            RecetaEncontrado.Med_Nom = resultado.GetString(resultado.GetOrdinal("Med_Nom"));
                            RecetaEncontrado.Rec_Dos = resultado.GetInt32(resultado.GetOrdinal("Rec_Dos"));
                            RecetaEncontrado.Rec_Frec = resultado.GetString(resultado.GetOrdinal("Rec_Frec"));
                            RecetaEncontrado.Rec_FECI = resultado.GetString(resultado.GetOrdinal("Rec_FECI"));
                            RecetaEncontrado.REC_FEFI = resultado.GetString(resultado.GetOrdinal("REC_FEFI"));
                            RecetaEncontrado.REC_DET = resultado.GetString(resultado.GetOrdinal("REC_DET"));
                            lsRecetaEncontrada.Add(RecetaEncontrado);
                          
                        }
                          
                        }
                }

            }
            return lsRecetaEncontrada;
        }



        public void NotificarPacientesWA()
        {
            string salida = "";
            //   SqlConnection conexion = new SqlConnection(CadenaConexion);


            string sentencia = " SELECT '****************************************************' as 'mensaje' ,'965449390' as 'Celular' UNION ALL SELECT 'LA RECETA DE LA ÚLTIMA CONSULTA ES ' ,'965449390' as 'Celular' UNION ALL " +
" SELECT 'COMENTARIO RECETA ' +   T0.REC_COM         + CHAR(13)         + 'FECHA RECETA: '   + CONVERT(VARCHAR(10), T0.REC_FEC, 103) ,'965449390' as 'Celular'  " +
" FROM[dbo].[Receta_Cab] T0 INNER JOIN[dbo].[Paciente]  T1 ON T0.Pac_Cod = T1.Pac_Cod where t1.pac_dni ='47273197' and Rec_cod = (select max(isnull(R0.rec_cod, 0)) " +
" from[dbo].[Receta_Cab] R0 INNER JOIN[dbo].[Paciente]  r1 ON r0.Pac_Cod = r1.Pac_Cod where r1.Pac_dni = '47273197') " +
" Union all " +
" SELECT ' Codigo:  ' + T2.[Med_Cod] + ' Medicamento: ' + t3.[Med_Nom] + ' Dosis ' + convert(varchar(10), t2.[Rec_Dos])+ ' Frecuencia ' + " +
" convert(varchar(10), t2.[Rec_Frec])+ CHAR(13)  ,'965449390' as 'Celular' FROM[dbo].[Receta_Cab] T0 INNER JOIN[dbo].[Paciente]  T1 ON T0.Pac_Cod = T1.Pac_Cod inner join[dbo].[Receta_Detalle] t2 " +
" on t2.[Rec_Cod]=t0.Rec_cod left join[dbo].[Medicamento] t3 on t3.[Med_Cod]=t2.[Med_Cod] " +
" where t1.pac_dni='47273197' and t0.Rec_cod = (select max (isnull(R0.rec_cod,0)) from[dbo].[Receta_Cab] R0 INNER JOIN[dbo].[Paciente] r1 ON r0.Pac_Cod=r1.Pac_Cod where r1.Pac_dni='47273197')";
            {

                using (SqlConnection conexion = new SqlConnection(CadenaConexion))
                {
                    conexion.Open();
                    using (SqlCommand comando = new SqlCommand(sentencia, conexion))
                    {

                        SqlDataAdapter da = new SqlDataAdapter(comando);
                        DataTable dt = new DataTable();
                        da.Fill(dt);
                        if (dt.Rows.Count > 0)
                        {

                            for (int i = 0; i < dt.Rows.Count; i++)
                            {


                                string Mensaje = dt.Rows[i]["mensaje"].ToString();
                                string Celular = dt.Rows[i]["Celular"].ToString();




                                //salida = "Paciente: " + Genero + nombre + " " + apellido + ". No se olvide que mañana tiene cita en: " + Especialidad;
                                        //   salida = "Your " + Mensaje + " code is 47273197";
                                salida = "Your appointment is coming up on "  + Mensaje.Trim() + " mañana at  09:00 hrs";
                                //   salida =  Mensaje.Trim() ;

                                EncolarMensajes(Celular + "   " + salida);
                            }
                        }

                        else

                        {
                            salida = "No hubo resultados";
                        }
                        conexion.Close();
                    }
                }
            }
        }

        public void EncolarMensajes(string Mensaje)
        {

            var factory = new ConnectionFactory() { HostName = "crane.rmq.cloudamqp.com", UserName = "vnftlcgh", Password = "O0q0Ov9k83XGjSaXDsq01e-kl8EcD4FC", VirtualHost = "vnftlcgh" };
            //carla   var factory = new ConnectionFactory() { HostName = "moose.rmq.cloudamqp.com", UserName = "fzpuxqcq", Password = "FYfMsjpJR6WcmQWa7VkLJGXrD5u82sG7", VirtualHost = "fzpuxqcq" };

            using (var connection = factory.CreateConnection())
            {
                using (var channel = connection.CreateModel())
                {
                    //ant alertame2
                    channel.QueueDeclare(queue: "MensajeriaDSD", false, false, false, null);
                    var body = Encoding.UTF8.GetBytes(Mensaje);
                    channel.BasicPublish("", "MensajeriaDSD", null, body);

                }
            }
        }

        public void LeerMensajes()
        {
            var factory = new ConnectionFactory() { HostName = "crane.rmq.cloudamqp.com", UserName = "vnftlcgh", Password = "O0q0Ov9k83XGjSaXDsq01e-kl8EcD4FC", VirtualHost = "vnftlcgh" };
            using (var connection = factory.CreateConnection())
            {
                using (var channel = connection.CreateModel())
                {

                    channel.QueueDeclare(queue: "MensajeriaDSD", false, false, false, null);
                    var consumer = new EventingBasicConsumer(channel);
                    consumer.Received += (sender, ea) =>
                    {
                        var body = ea.Body;
                        var message = Encoding.UTF8.GetString(body.ToArray());
                        string movil, cuerpo;

                        movil = message.Substring(0, 11).Trim();
                        cuerpo = message.Substring(11).Trim();
                        ProcesarMensajesWhatsapp(movil, cuerpo);
                    };
                    channel.BasicConsume(queue: "MensajeriaDSD", autoAck: true, consumer: consumer);

                }
            }
        }

        public void ProcesarMensajesWhatsapp(string movil, string salida)
        {
            const string accountSid = "AC3d900297bdce730986fb6c6cb847a53c";
            const string authToken = "ab33b567d52911a818ee5cb6d135baf6";

            // salida = "Your appointment is coming up on mañana at 15:00 hrs";
            TwilioClient.Init(accountSid, authToken);

            var message = MessageResource.Create(from: new Twilio.Types.PhoneNumber("whatsapp:+14155238886"),
                                                 body: salida,
                                                   to: new Twilio.Types.PhoneNumber("whatsapp:+51" + movil));





        }




    }
}
